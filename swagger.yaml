openapi: 3.0.0
info:
  title: Syssel|Microservices
  version: 1.0.0
servers:
  - url: https://api.staging.syssel.app
tags:
  - name: User
  - name: Profile
  - name: Profile|Address
  - name: Profile|Social
  - name: Profile|Storefront
  - name: Catalog
  - name: Catalog|Variant
  - name: Catalog|Storefront
  - name: Categories
  - name: Categories|Storefront
  - name: Files|Image
paths:
  /users/me:
    get:
      tags:
        - User
      summary: Me
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/{user_id}:
    get:
      tags:
        - User
      summary: Single
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - User
      summary: Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Sohail
                last_name:
                  type: string
                  example: Bukhari
                username:
                  type: string
                  example: rosamond76
                email:
                  type: string
                  example: grant91@yahoo.com
                phone:
                  type: string
                  example: null

      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: user_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users:
    get:
      tags:
        - User
      summary: List
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/register:
    post:
      tags:
        - User
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Sohail
                last_name:
                  type: string
                  example: Bukhari
                username:
                  type: string
                  example: '{{$randomUserName}}'
                email:
                  type: string
                  example: '{{$randomEmail}}'
                password:
                  type: string
                  example: abc@1234
              required:
                - first_name
                - last_name
                - email
                - username
                - password
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/login:
    post:
      tags:
        - User
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: '{{user_email}}}'
                password:
                  type: string
                  example: abc@1234
              required:
                - email
                - password
              # example:
              #   email: '{{user_email}}'
              #   password: abc@1234
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/profiles:
    get:
      tags:
        - User
      summary: Profiles
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/token:
    get:
      tags:
        - User
      summary: Get Access Token
      parameters:
        - name: refresh_token
          in: query
          schema:
            type: string
          example: '{{refresh_token}}'
        - name: profile
          in: query
          schema:
            type: string
          example: '{{profile_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/forgot_password:
    post:
      tags:
        - User
      summary: Forgot Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: '{{user_email}}}'
                source:
                  type: string
                  example: web | mobile
              required:
                - email
                - source

      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/reset:
    post:
      tags:
        - User
      summary: Reset Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: '{{user_email}}}'
                password:
                  type: string
                  example: abc@1234
                code:
                  type: string
                  example: WL5rO46ojmQHdciK5njYo
              required:
                - email
                - password
                - code

      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/reset/check:
    post:
      tags:
        - User
      summary: Check / Validate Reset Code
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: '{{user_email}}}'
                code:
                  type: string
                  example: 727178
              required:
                - email
                - code

      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/status:
    get:
      tags:
        - User
      summary: Instance Status
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/verify/again:
    post:
      tags:
        - User
      summary: Verify Again
      requestBody:
        content: {}
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/verify:
    get:
      tags:
        - User
      summary: Verification
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: code
          in: query
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MWM1YmJjYWI3ZThlNzhkMTc3ZTc2M2MiLCJ0eXBlIjoidmVyaWZpY2F0aW9uIiwiaWF0IjoxNjQwMzUzOTM0LCJleHAiOjE2NDAzNTQ1MzQsImlzcyI6InN5c3NlbC5hcHAifQ.d09DWX_Nn6D7lQrIzw9XQrF62pxpl9A2PdN7hZ2jGKo
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profiles/me:
    get:
      tags:
        - Profile
      summary: Me
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profiles/{profile_id}:
    get:
      tags:
        - Profile
      summary: Single
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: profile_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Profile
      summary: Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Muhammad Sohail Bukhari
                description: Seasonal Cuisine
                website: ''
                category: artist
                tags:
                  - restaurant
                opening_times:
                  '1':
                    open:
                      hour: '8'
                      minute: '0'
                    close:
                      hour: '8'
                      minute: '0'
                image:
                  alt: Syssel logo
                  _id: 61758dba8914c7fb4051193c
                  key: 1635093944128-u2PWHqmzzlYqT7V_y2dcw
                  type: image
                  src:
                    original: >-
                      https://syssel-staging.s3.eu-west-1.amazonaws.com/1635093944128-u2PWHqmzzlYqT7V_y2dcw
                    thumbnail: >-
                      https://syssel-staging.s3.eu-west-1.amazonaws.com/1635093944128-u2PWHqmzzlYqT7V_y2dcw
                  owner: 616fe6f4b5b6dc20fcf8824e
                  profile: 616fe6f4b5b6dc20fcf8824e
                  createdAt: '2021-10-24T16:45:46.314Z'
                  updatedAt: '2021-10-24T16:45:46.314Z'
                  __v: 0
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: profile_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profiles:
    get:
      tags:
        - Profile
      summary: List
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '25'
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Profile
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Ali Raza
                type:
                  type: string
                  example: consumer or provider
                category:
                  type: string
                  example: artist
              required:
                - name
                - type
              # example:
              #   name: Ali Raza
              #   type: consumer or provider
              #   category: artist
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profiles/favourite_profile/{profile_id}:
    post:
      tags:
        - Profile
      summary: Add Favourite Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: 61732d4bf7a083892141ecbb
              required:
                - id

      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: profile_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Profile
      summary: Remove Favourite Profile
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: profile_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}

  /profiles/address:
    get:
      tags:
        - Profile|Address
      summary: List
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Profile|Address
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                default:
                  type: boolean
                  example: true
                label:
                  type: string
                  example: Office
                address:
                  type: object
                  properties:
                    location:
                      type: string
                      example: House#123 Modal Town A
                    city:
                      type: string
                      example: Lahore
                geo:
                  type: object
                  properties:
                    coord:
                      type: array
                      items:
                        example:
                          - 31.448552268730946
                          - 74.25523178426592

              required:
                - geo
                - address
                - label

              # example:
              #   default: true
              #   label: Office
              #   address:
              #     location: House#123 Modal Town A
              #     city: Lahore
              #   geo:
              #     coord:
              #       - 31.448552268730946
              #       - 74.25523178426592
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profiles/address/{address_id}:
    put:
      tags:
        - Profile|Address
      summary: Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                default:
                  type: boolean
                  example: true
                label:
                  type: string
                  example: Office
                address:
                  type: object
                  properties:
                    location:
                      type: string
                      example: House#123 Modal Town A
                    city:
                      type: string
                      example: Lahore
                geo:
                  type: object
                  properties:
                    coord:
                      type: array
                      items:
                        example:
                          - 31.448552268730946
                          - 74.25523178426592

              required:
                - geo
                - address
                - label

      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: address_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Profile|Address
      summary: Delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: address_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profiles/following:
    get:
      tags:
        - Profile|Social
      summary: Following
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: select
          in: query
          schema:
            type: string
          example: name type followers
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profiles/follow/{profile_id}:
    post:
      tags:
        - Profile|Social
      summary: Follow
      requestBody:
        content: {}
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: profile_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profiles/unfollow/{profile_id}:
    delete:
      tags:
        - Profile|Social
      summary: Unfollow
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: profile_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profiles/storefront:
    get:
      tags:
        - Profile|Storefront
      summary: List
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /profiles/storefront/{profile_id}:
    get:
      tags:
        - Profile|Storefront
      summary: Single
      parameters:
        - name: profile_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /catalogs/variants/{catalog_id}/{variant_id}:
    get:
      tags:
        - Catalog|Variant
      summary: Single
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: catalog_id
          in: path
          schema:
            type: string
          required: true
        - name: variant_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Catalog|Variant
      summary: Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sku:
                  type: string
                  example: booster-small
                name:
                  type: string
                  example: teal
                price:
                  type: integer
                  example: 10.2
                position:
                  type: integer
                  example: 0
              required:
                - name
                - sku
                - price
                - position

      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: catalog_id
          in: path
          schema:
            type: string
          required: true
        - name: variant_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Catalog|Variant
      summary: Remove
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: catalog_id
          in: path
          schema:
            type: string
          required: true
        - name: variant_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /catalogs/variants/{catalog_id}:
    post:
      tags:
        - Catalog|Variant
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sku:
                  type: string
                  example: booster-small
                name:
                  type: string
                  example: teal
                price:
                  type: integer
                  example: 10.2
                position:
                  type: integer
                  example: 0
              required:
                - name
                - sku
                - price
                - position

      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: catalog_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /catalogs/storefront/{catalog_id}:
    get:
      tags:
        - Catalog|Storefront
      summary: Single
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: catalog_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /catalogs/storefront:
    get:
      tags:
        - Catalog|Storefront
      summary: List
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: select
          in: query
          schema:
            type: string
          example: _id name image
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /catalogs/me:
    get:
      tags:
        - Catalog
      summary: Me
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /catalogs:
    post:
      tags:
        - Catalog
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Baverage Coke
                type:
                  type: string
                  example: service or item
                status:
                  type: string
                  example: active or draft
                use_in_stock:
                  type: boolean
                  example: false
                description:
                  type: string
                  example: tasty
                quantity:
                  type: integer
                  example: 12
                category:
                  type: string
                  example: artist
                image:
                  type: object
                  properties:
                    alt:
                      type: string
                      example: pizza
                    src:
                      type: object
                      properties:
                        original:
                          type: string
                          example: pizza
                        thumbnail:
                          type: string
                          example: pizza
                images:
                  type: array
                  items:
                    type: object
                    properties:
                      alt:
                        type: string
                        example: pizza
                      src:
                        type: object
                        properties:
                          original:
                            type: string
                            example: pizza
                          thumbnail:
                            type: string
                            example: pizza
                variants:
                  type: array
                  items:
                    type: object
                    properties:
                      sku:
                        type: string
                        example: pizza-small
                      name:
                        type: string
                        example: small
                      price:
                        type: integer
                        example: 8.2
                      position:
                        type: integer
                        example: 0
                extras:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: coke
                      price:
                        type: integer
                        example: 8.2
                tags:
                  type: array
                  items:
                    example: small

              required:
                - type
                - status

      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /catalogs/{catalog_id}:
    put:
      tags:
        - Catalog
      summary: Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Baverage Coke
                type:
                  type: string
                  example: service or item
                status:
                  type: string
                  example: active or draft
                use_in_stock:
                  type: boolean
                  example: false
                description:
                  type: string
                  example: tasty
                quantity:
                  type: integer
                  example: 12
                category:
                  type: string
                  example: artist
                image:
                  type: object
                  properties:
                    alt:
                      type: string
                      example: pizza
                    src:
                      type: object
                      properties:
                        original:
                          type: string
                          example: pizza
                        thumbnail:
                          type: string
                          example: pizza
                images:
                  type: array
                  items:
                    type: object
                    properties:
                      alt:
                        type: string
                        example: pizza
                      src:
                        type: object
                        properties:
                          original:
                            type: string
                            example: pizza
                          thumbnail:
                            type: string
                            example: pizza
                variants:
                  type: array
                  items:
                    type: object
                    properties:
                      sku:
                        type: string
                        example: pizza-small
                      name:
                        type: string
                        example: small
                      price:
                        type: integer
                        example: 8.2
                      position:
                        type: integer
                        example: 0
                extras:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: coke
                      price:
                        type: integer
                        example: 8.2
                tags:
                  type: array
                  items:
                    example: small
                order_count:
                  type: integer
                  example: 0
                profile:
                  type: string
                  example: 61d9e395f1c4afe4670239b7
                id:
                  type: string
                  example: 61d9e395f1c4afe4670239b7

      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: catalog_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Catalog
      summary: Delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: catalog_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /categories/storefront/{category}:
    get:
      tags:
        - Categories|Storefront
      summary: Single
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: category
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /categories/storefront:
    get:
      tags:
        - Categories|Storefront
      summary: List
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /categories/{category}:
    get:
      tags:
        - Categories
      summary: Single
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: category
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Categories
      summary: Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Restaurants
                parent:
                  type: string
                  example: null
              required:
                - name
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: category
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /categories:
    get:
      tags:
        - Categories
      summary: List
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Categories
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Restaurants

              required:
                - name

      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /files/image/me:
    get:
      tags:
        - Files|Image
      summary: me
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '25'
        - name: offset
          in: query
          schema:
            type: integer
          example: '0'
        - name: profile
          in: query
          schema:
            type: string
          example: '{{profile_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /files/image:
    post:
      tags:
        - Files|Image
      summary: Upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{access_token}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
